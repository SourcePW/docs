- name: remove current mysql 
  shell: apt autoremove mysql-* -y

- name: remove mysql data
  shell: rm -fr /var/lib/mysql

# get_url下载403，使用离线文件 
# dpkg-deb -c mysql-apt-config_0.8.6-1_all.deb 
# ./usr/share/doc/mysql-apt-config/
# ./usr/share/doc/mysql-apt-config/changelog.Debian.gz 
- name: install depend 
  apt: name={{ item }} state=present
  with_items: 
    - python3-pip
    - libtinfo5
    - libmecab2

- name: pymysql
  shell: pip3 install pymysql

- name: create mysql dirs
  file: 
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/mysql/mysql.conf.d
    # - /data/mysql

- name: check mysqld bin file
  stat:
    path: /usr/sbin/mysqld
  register: mysqld_file

- name: download mysql package
  shell: wget -O  /tmp/{{ mysql.mysql_package }} {{ mysql.mysql_package_url }}

- name: Decompress
  shell: |
    mkdir {{ mysql.mysql_tmp_dirs }}
    tar xvf /tmp/{{ mysql.mysql_package }} -C {{ mysql.mysql_tmp_dirs }}
    cd {{ mysql.mysql_tmp_dirs }}

- name: delete test package
  shell: rm -fr *test*.deb
  args:
    chdir: "{{ mysql.mysql_tmp_dirs }}"

- name: install mysql
  shell: dpkg -i mysql-*.deb 
  args:
    chdir: "{{ mysql.mysql_tmp_dirs }}"
  environment:
        DEBIAN_FRONTEND: noninteractive
  when: mysqld_file.stat.exists == false

- name: timed wait 5s
  pause: seconds=5

- name: cover mysql config file
  copy: src=mysql/mysqld.cnf dest=/etc/mysql/mysql.conf.d/mysqld.cnf

# - name: Check mysql origin data path exists
#   stat:
#     path: /var/lib/mysql
#   register: mysql_origin_path

# - name: change mysql data dir
#   shell: mv /var/lib/mysql "{{ mysql.data_dir }}"
#   when: mysql_origin_path.stat.exists

- name: enable and restart mysql
  service: 
    name: mysql 
    state: restarted
    enabled: yes
      
- name: CreateMysqlDatabase
  mysql_db:
    name: "{{ mysql.mysql_db_name }}"
    login_unix_socket: "{{ mysql.socket }}"
    login_user: "{{ mysql.sql_root_user }}" 
    login_password: "{{ mysql.sql_root_password }}"
    state: present

# A MySQL module is required: for Python 2.7 either PyMySQL, or MySQL-python, or for Python 3.X mysqlclient or PyMySQL
# select User,authentication_string,Host from mysql.user;   查看当前用户信息
- name: update mysql root password for all root accounts
  mysql_user: 
    login_unix_socket: "{{ mysql.socket }}"
    login_user: "{{ mysql.sql_root_user }}" 
    login_password: "{{ mysql.sql_root_password }}"
    login_host: "localhost"
    user: "{{ mysql.sql_root_user }}" 
    password: "{{ mysql.sql_root_password }}"
    state: present

- name: add root remote user
  mysql_user: 
    login_unix_socket: "{{ mysql.socket }}"
    login_user: "{{ mysql.sql_root_user }}" 
    login_password: "{{ mysql.sql_root_password }}"
    login_host: "localhost"
    user: "{{ mysql.sql_root_user }}" 
    host: "%"
    password: "{{ mysql.sql_root_password }}"
    state: present

# 查看用户权限 show grants for root;
- name: 增加权限
  shell: mysql -u{{ mysql.sql_root_user }} -p{{ mysql.sql_root_password }} -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;FLUSH PRIVILEGES;"

# - name: copy init data sql 
#   copy: src=soft/firewall_init.sql dest=/tmp/init.sql owner=root group=root

- name: init data sql 
  mysql_db:
    login_unix_socket: "{{ mysql.socket }}"
    login_user: "{{ mysql.sql_root_user }}" 
    login_password: "{{ mysql.sql_root_password }}"
    login_host: "localhost"
    name: "{{ mysql.mysql_db_name }}"
    state: import
    target: "{{ soft.soft_init_sql_file }}"

